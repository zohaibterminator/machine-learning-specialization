PCA or Principle Component Analysis is a unsupervised learning algorithm that is used for visualizing when you have a lot of features like 50 or a 1000 features. Since you can't visualize 50 or 1000 features, the PCA algorithm reduces the features to 2 or 3, so that you can plot it an visualize it. Normally used by data scientists to see what is happening in the data.

Lets say you the data about a car, like the length, width, diameter of the wheel, height and many other features. If you look at the length and width of the car and call it X_1 and X_2 respectively. The length tends to vary a lot. Some cars are small, some are long, etc. But since there is a set width of a road in some countries, the width of the car as a result doesn't vary that much. If you are reducing the number of features, you might just take X_1. So a PCA, as a result, will only take the X_1, and remove the X_2 because it varies so little from car to car. But it can do more than that. Another similar example is to take wheel as X_2. The wheel also doesn't vary that much, so PCA will also basically say that remove X_2 from the dataset.

Lets take a look at a more complex example. What if we have 2 features that have some variability. Lets say length and height. Cars have variable length and height. So what we will do is combine the two axis, into a third axis called z-axis (this is not the z-axis, as in on the 3rd dimension). We can sayh that this represents the size of the car. The x co-ordinates represents the length of the car, and the y co-ordinate represents the height. We will then use this new feature in place of features X_1 and X_2. This is the basic idea of PCA, finding new axis and co-ordinates to represent multiple features. In this example we were just mapping 2 features down to 1, but in practice, PCA is used to reduce 50, 100 and maybe 1000s of features down to 2 or 3 features which can be visualized.